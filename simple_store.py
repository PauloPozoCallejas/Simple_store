# -*- coding: utf-8 -*-
"""Simple_store.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i-Mjn2jCo1fb01zoZ5pRbeipkcb47Q7g
"""

import numpy as np
from datetime import datetime

Shop_record = [["incident description", 'solved', 4, 1],                    #Matriz con datos de la tienda a utilizar
               ["incident description", 'solved', 31, 1],
               ["incident description", 'solved', 17, 2],
               ["incident description", 'solved', 9, 3],
                ["incident description", 'solved', 13, 4],
                ["incident description", 'open', 21, 5],
                ["incident description", 'solved', 25, 5],
                ["incident description", 'open', 3, 6],
                ["incident description", 'open', 10, 7],
                ["incident description", 'solved', 2, 7]]

class Simple_store:
    def __init__(self):
        Shop_status = 0
        
    def incident_status(self, date1, date2):
        if date1 > date2:                                           # se reordenan las fechas en caso de que la primera fecha ingresada sea mayor a la segunda
            date1, date2 = date2, date1
        now=datetime.now()
        Shop_status = self
        j = 0
        c1 = 0
        c2 = 0
        z = 0
        G = 0
        for i in range(len(self)):                                 # se crea una nueva matriz solo con los datos de la matriz original que coincidan con las fechas ingresadas
            if date2 >= self[i][3] and self[i][3] >= date1:
                j = j+1
            else:
                Shop_status = np.delete(Shop_status, j, axis = 0)
          
        for i in range(len(Shop_status)):
            if Shop_status[i][1] == 'solved':
                c1 = c1+1
                z = z + float(Shop_status[i][2])
            if Shop_status[i][1] == 'open':
                x = now.day - int(Shop_status[i][3])
                y = now.hour + (x*24) - int(Shop_status[i][2])
                Shop_status[i][2] = y
                c2 = c2+1
          
        for i in range(len(Shop_status)):
            if G < int(Shop_status[i][2]):
                G = int(Shop_status[i][2])

        solved_cases = c1
        open_cases = c2     
        avs = z/c1
        ms = G
        print(Shop_status)
        print('solved cases:', solved_cases ,'\n', 'open cases:', open_cases ,'\n', 'average solution:', avs ,'\n', 'maximum solution:', ms)

Simple_store.incident_status(Shop_record, 1, 3)

Simple_store.incident_status(Shop_record, 4, 7)

Simple_store.incident_status(Shop_record, 5, 2)